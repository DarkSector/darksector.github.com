<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Allegro | Pronoy Chopra's Blog]]></title>
  <link href="http://DarkSector.github.com/blog/categories/allegro/atom.xml" rel="self"/>
  <link href="http://DarkSector.github.com/"/>
  <updated>2012-05-30T00:03:30+05:30</updated>
  <id>http://DarkSector.github.com/</id>
  <author>
    <name><![CDATA[Pronoy Chopra]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Building Allegro 5.0 with Xcode 4.3 on Mac OS X 10.7.4]]></title>
    <link href="http://DarkSector.github.com/blog/building-allegro-5-dot-0-with-xcode-4-dot-3-on-mac-os-x-10-dot-7-4/"/>
    <updated>2012-05-12T17:08:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/building-allegro-5-dot-0-with-xcode-4-dot-3-on-mac-os-x-10-dot-7-4</id>
    <content type="html"><![CDATA[<p>So here's the attempt to build <a href="http://allegro.cc">Allegro 5.0</a> on Mac OS X Lion 10.7.4 with the latest Xcode 4.3. As usual I am apprehensive of the outcome considering it's Xcode. You never know, how it might break.</p>

<p>Anyways, let's follow the <a href="http://wiki.allegro.cc/index.php?title=OSX,_Xcode_4,_Framework">wiki article</a> and the first step is to obviously checkout the repository. So lets do that.</p>

<p><code>bash svn checkout
DarkSector@DarkBookAir:~/Code$ svn checkout https://alleg.svn.sourceforge.net/svnroot/alleg/allegro/branches/5.0 allegro
Error validating server certificate for 'https://alleg.svn.sourceforge.net:443':
 - The certificate is not issued by a trusted authority. Use the
   fingerprint to validate the certificate manually!
Certificate information:
 - Hostname: *.svn.sourceforge.net
 - Valid: from Sat, 25 Feb 2012 23:58:41 GMT until Sun, 31 Mar 2013 19:51:44 GMT
 - Issuer: GeoTrust, Inc., US
 - Fingerprint: 0b:11:76:de:db:4c:74:72:cb:01:49:7d:13:70:c2:f1:13:7b:cb:bf
(R)eject, accept (t)emporarily or accept (p)ermanently? t
</code></p>

<p>Now that worked out well, downloaded the Allegro 5.0 Source. Next step is to build it using CMake but of course I didn't have CMake so let's download that</p>

<p>```bash CMake download
DarkSector@DarkBookAir:~$ brew install cmake
==> Downloading https://downloads.sf.net/project/machomebrew/Bottles/cmake-2.8.8.lio</p>

<h6>################################################################## 100.0%</h6>

<p>==> Pouring cmake-2.8.8.lion.bottle.1.tar.gz
/usr/local/Cellar/cmake/2.8.8: 652 files, 30M
```</p>

<p>Yep that did it. Now to use CMake on the source</p>

<p><code>bash Building Allegro using CMake
DarkSector@DarkBookAir:~/Code/allegro$ mkdir build &amp;&amp; cd build
DarkSector@DarkBookAir:~/Code/allegro/build$ cmake -G Xcode -DWANT_FRAMEWORKS=1 - ..-- The C compiler identification is GNU 4.2.1
-- The CXX compiler identification is GNU 4.2.1
-- Checking whether C compiler has -isysroot
-- Checking whether C compiler has -isysroot - yes
-- Checking whether C compiler supports OSX deployment target flag
-- Checking whether C compiler supports OSX deployment target flag - yes
-- Check for working C compiler using: Xcode
-- Check for working C compiler using: Xcode -- works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Checking whether CXX compiler has -isysroot
-- Checking whether CXX compiler has -isysroot - yes
-- Checking whether CXX compiler supports OSX deployment target flag
-- Checking whether CXX compiler supports OSX deployment target flag - yes
-- Check for working CXX compiler using: Xcode
-- Check for working CXX compiler using: Xcode -- works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Allowing GCC to use SSE instructions
-- Could NOT find PkgConfig (missing:  PKG_CONFIG_EXECUTABLE)
-- Check if the system is big endian
-- Searching 16 bit integer
-- Looking for sys/types.h
-- Looking for sys/types.h - found
-- Looking for stdint.h
-- Looking for stdint.h - found
-- Looking for stddef.h
-- Looking for stddef.h - found
-- Check size of unsigned short
-- Check size of unsigned short - done
-- Using unsigned short
-- Check if the system is big endian - little endian
-- Looking for include file dirent.h
-- Looking for include file dirent.h - found
-- Looking for include file inttypes.h
-- Looking for include file inttypes.h - found
-- Looking for include files sys/types.h, linux/joystick.h
-- Looking for include files sys/types.h, linux/joystick.h - not found.
-- Looking for include file stdbool.h
-- Looking for include file stdbool.h - found
-- Looking for include file stdint.h
-- Looking for include file stdint.h - found
-- Looking for include file sys/io.h
-- Looking for include file sys/io.h - not found.
-- Looking for include file sys/stat.h
-- Looking for include file sys/stat.h - found
-- Looking for include file sys/time.h
-- Looking for include file sys/time.h - found
-- Looking for include file time.h
-- Looking for include file time.h - found
-- Looking for include file sys/utsname.h
-- Looking for include file sys/utsname.h - found
-- Looking for include file sys/types.h
-- Looking for include file sys/types.h - found
-- Looking for include file soundcard.h
-- Looking for include file soundcard.h - not found.
-- Looking for include file sys/soundcard.h
-- Looking for include file sys/soundcard.h - not found.
-- Looking for include file machine/soundcard.h
-- Looking for include file machine/soundcard.h - not found.
-- Looking for include file linux/soundcard.h
-- Looking for include file linux/soundcard.h - not found.
-- Looking for include file libkern/OSAtomic.h
-- Looking for include file libkern/OSAtomic.h - found
-- Looking for include file sys/inotify.h
-- Looking for include file sys/inotify.h - not found.
-- Looking for include file sys/timerfd.h
-- Looking for include file sys/timerfd.h - not found.
-- Looking for getexecname
-- Looking for getexecname - not found
-- Looking for mkstemp
-- Looking for mkstemp - found
-- Looking for mmap
-- Looking for mmap - found
-- Looking for mprotect
-- Looking for mprotect - found
-- Looking for sched_yield
-- Looking for sched_yield - found
-- Looking for sysconf
-- Looking for sysconf - found
-- Looking for fseeko
-- Looking for fseeko - found
-- Looking for ftello
-- Looking for ftello - found
-- Check size of _Bool
-- Check size of _Bool - done
-- Performing Test ALLEGRO_HAVE_PROCFS_ARGCV
-- Performing Test ALLEGRO_HAVE_PROCFS_ARGCV - Failed
-- Performing Test ALLEGRO_HAVE_SV_PROCFS_H
-- Performing Test ALLEGRO_HAVE_SV_PROCFS_H - Failed
-- Performing Test ALLEGRO_HAVE_VA_COPY
-- Performing Test ALLEGRO_HAVE_VA_COPY - Success
-- Check if constructors are supported - yes
-- Found OpenGL: /System/Library/Frameworks/OpenGL.framework  
-- Looking for include file pthread.h
-- Looking for include file pthread.h - found
-- Looking for pthread_create
-- Looking for pthread_create - found
-- Found Threads: TRUE  
-- Found OpenAL: /System/Library/Frameworks/OpenAL.framework  
-- Could NOT find FLAC (missing:  FLAC_INCLUDE_DIR FLAC_LIBRARY)
WARNING: libFLAC not found or compile test failed, disabling support.
-- Could NOT find DUMB (missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY)
WARNING: libdumb not found or compile test failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
-- Found OGG: /Library/Frameworks/ogg.framework  
-- Could NOT find VORBIS (missing:  VORBISFILE_LIBRARY)
WARNING: libvorbis not found or compile test failed, disabling support.
-- Found Freetype: /Library/Frameworks/freetype.framework  
-- Found ZLIB: /usr/lib/libz.dylib (found version "1.2.5")
-- Found PhysFS: /Library/Frameworks/physfs.framework  
-- Found PHYSFS: /Library/Frameworks/physfs.framework  
-- Performing Test PHYSFS_IMPLICIT_ZLIB
-- Performing Test PHYSFS_IMPLICIT_ZLIB - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/DarkSector/Code/allegro/build
</code></p>

<p>Woah hang on there a minute. No FLAC support, no DUMB and no VORBIS. Hmm, okay let's get that too. I mean while we're at it what's the point in leaving it out. So let's build FLAC, VORBIS, DUMB</p>

<p><code>bash dumb vorbis flac and pkgconfig
DarkSector@DarkBookAir:~/Code/allegro/build$ brew install flac; brew install libvorbis &amp;&amp; brew install pkgconfig
</code></p>

<p><code>bash After installing libvorbis libflac and pkgconfig
DarkSector@DarkBookAir:~/Code/allegro/build$ cmake -G Xcode -D WANT_FRAMEWORKS=1 - ..
-- Allowing GCC to use SSE instructions
-- Found PkgConfig: /usr/local/bin/pkg-config (found version "0.25")
-- Could NOT find FLAC (missing:  FLAC_INCLUDE_DIR FLAC_LIBRARY)
WARNING: libFLAC not found or compile test failed, disabling support.
-- Could NOT find DUMB (missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY)
WARNING: libdumb not found or compile test failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
-- Performing Test VORBIS_COMPILES
-- Performing Test VORBIS_COMPILES - Success
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/DarkSector/Code/allegro/build
DarkSector@DarkBookAir:~/Code/allegro/build$ cmake -G Xcode -DWANT_FRAMEWORKS=1 - ..
-- Allowing GCC to use SSE instructions
-- Found FLAC: /usr/local/include  
-- Performing Test FLAC_COMPILES
-- Performing Test FLAC_COMPILES - Success
-- Could NOT find DUMB (missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY)
WARNING: libdumb not found or compile test failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
-- Configuring done
-- Generating done
-- Build files have been written to: /Users/DarkSector/Code/allegro/build
</code></p>

<p>So as it turns out there is no libdumb formula on brew. I think I'll contribute and add it. That'll be pretty cool. Anyways back to the job at hand.</p>

<p>So that's built it. Now to start programming I guess.</p>
]]></content>
  </entry>
  
</feed>
