<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pronoy Chopra's Blog]]></title>
  <link href="http://DarkSector.github.com/atom.xml" rel="self"/>
  <link href="http://DarkSector.github.com/"/>
  <updated>2012-09-21T18:50:45+05:30</updated>
  <id>http://DarkSector.github.com/</id>
  <author>
    <name><![CDATA[Pronoy Chopra]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Transcripts]]></title>
    <link href="http://DarkSector.github.com/blog/transcripts/"/>
    <updated>2012-09-21T16:26:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/transcripts</id>
    <content type="html"><![CDATA[<p>So, it turns out, applying to universities abroad isn&#8217;t that easy. The worse part is they are arrogant enough to not inform you, that your documents are incomplete. I had to call the universities to check if everything was alright and they replied in the negative. I panicked and called all my relatives who knew about sending documents to the US.</p>

<p>The transcripts that need to be sent to the US should be sealed and sent directly by your previous university. I contacted my counsellor at Jamboree and she said it was obvious. Apparently it isn&#8217;t obvious. On that note, if you&#8217;re thinking of trying for the US and are thinking of seeking help for the same then please keep the next few lines in mind:</p>

<h5>Jamboree is a unit of incredibly incompetent individuals who are not only unable to bring about a credible result but are also very inept at training the students for GRE or TOEFL. I took my exam after having prepared with them and scored a dismal 1190. I retook the test on my own and got a 314 without anyone&#8217;s help. As far as admissions are concerned Jamboree is just one of those faces in a dingy street that promise results without actually ever delivering them. They are callous and misinformed.</h5>

<p>That being said, lets move on. The universities require sealed transcripts which in my case had to be retrieved by visiting my undergrad university in person and obtaining them. Oh god, I hate that place. But I got through. Then I got my individual mark sheets attested by a notary. That cost me a lot. I mean every document costs about 150 INR to be validated and I had 20 copies to be validated. After having validated them, I sent them flying to the respective destinations via FedEX.</p>

<p>What a pain it has been.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My experience with CentOS 5.8 and setting up Flask]]></title>
    <link href="http://DarkSector.github.com/blog/my-experience-with-centos-5-dot-8-and-setting-up-flask/"/>
    <updated>2012-08-26T03:44:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/my-experience-with-centos-5-dot-8-and-setting-up-flask</id>
    <content type="html"><![CDATA[<p>I have worked with Debian, Ubuntu Server, ArchLinux and now CentOS and what a kick in the nuts it has been. CentOS 5.8 ships with Python 2.4 and it is an absolute pain to setup. But finally it&#8217;s done.</p>

<p>So I began with installing Python2.7.3 first.</p>

<figure class='code'><figcaption><span>install Python2.7</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://www.python.org/ftp/python/2.7/Python-2.7.tgz
</span><span class='line'><span class="nv">$ </span>tar -xvf Python-2.7.tgz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Python-2.7
</span><span class='line'><span class="nv">$ </span>su
</span><span class='line'>root<span class="nv">$ </span>./configure --prefix<span class="o">=</span>/usr/local
</span><span class='line'>root<span class="nv">$ </span>make <span class="o">&amp;&amp;</span> make altinstall
</span></code></pre></td></tr></table></div></figure>


<p>Now we have Python2.7 binary in /usr/local/bin and we can go about installing Setuptools</p>

<figure class='code'><figcaption><span>install Setuptools</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://pypi.python.org/packages/source/s/setuptools/setuptools-0.6c11.tar.gz#md5<span class="o">=</span>7df2a529a074f613b509fb44feefe74e
</span><span class='line'><span class="nv">$ </span>tar -xvf setuptools-0.6c11.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>setuptools-0.6c11
</span><span class='line'><span class="nv">$ </span>su
</span><span class='line'>root<span class="nv">$ </span>python2.7 setup.py install
</span><span class='line'>root<span class="nv">$ </span>easy_install-2.7 install pip
</span><span class='line'>root<span class="nv">$ </span>pip-2.7 install virtualenv
</span></code></pre></td></tr></table></div></figure>


<p>Now, after having done all of this, I needed to install mod_wsgi</p>

<figure class='code'><figcaption><span>mod_wsgi</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>yum install mod_wsgi
</span></code></pre></td></tr></table></div></figure>


<p>And that&#8217;s where I asked people at #pocoo to shoot me in the face. It turns out you need mod_wsgi compiled with Python2.7 to use it with Python2.7</p>

<p>So, let&#8217;s uninstall mod_wsgi and then build it from source</p>

<figure class='code'><figcaption><span>compile mod_wsgi</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://code.google.com/p/modwsgi/downloads/detail?name<span class="o">=</span>mod_wsgi-3.4.tar.gz
</span><span class='line'><span class="nv">$ </span>tar -xvf mod_wsgi-3.4.tar.gz
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>mod_wsgi-3.4
</span><span class='line'><span class="nv">$ </span>./configure --using-python<span class="o">=</span>/usr/local/bin/python2.7
</span><span class='line'><span class="nv">$ </span>make
</span></code></pre></td></tr></table></div></figure>


<p>I got this error <a href="http://code.google.com/p/modwsgi/wiki/InstallationIssues#Mixing_32_Bit_And_64_Bit_Packages">http://code.google.com/p/modwsgi/wiki/InstallationIssues#Mixing_32_Bit_And_64_Bit_Packages</a> Which means it needs Python2.7 built with x86_64 not the 32 bit.</p>

<p>So, now, reinstall Python2.7</p>

<figure class='code'><figcaption><span>install Python2.7</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>Python-2.7
</span><span class='line'><span class="nv">$ </span>su
</span><span class='line'>root<span class="nv">$ </span>./configure --prefix<span class="o">=</span>/usr/local --enable-shared
</span><span class='line'>root<span class="nv">$ </span>make <span class="o">&amp;&amp;</span> make altinstall
</span></code></pre></td></tr></table></div></figure>


<p>And now reinstall mod_wsgi. Wow, this has been so difficult.</p>

<p>Anyway the problem doesn&#8217;t end here. Now we have to configure httpd.conf</p>

<figure class='code'><figcaption><span>httpd.conf</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>WSGISocketPrefix /var/run/wsgi
</span><span class='line'>WSGIPythonHome /var/www/virtual
</span><span class='line'>#WSGIPythonPath /var/www/test/virtual
</span><span class='line'><span class="nt">&lt;VirtualHost</span> <span class="err">122.99.126.71:80</span><span class="nt">&gt;</span>
</span><span class='line'>ServerName rhknhost
</span><span class='line'>WSGIDaemonProcess herokufinal user=pronoy group=pronoy threads=5
</span><span class='line'>WSGIScriptAlias / &quot;/var/www/herokufinal/herokufinal.wsgi&quot;
</span><span class='line'>DocumentRoot /var/www/herokufinal
</span><span class='line'>ErrorLog /var/www/herokufinal/logs/error.log
</span><span class='line'>
</span><span class='line'>        <span class="nt">&lt;Directory</span> <span class="err">/var/www/herokufinal</span><span class="nt">&gt;</span>
</span><span class='line'>                WSGIProcessGroup herokufinal
</span><span class='line'>                WSGIApplicationGroup %{GLOBAL}
</span><span class='line'>                WSGIScriptReloading On
</span><span class='line'>                Options Indexes FollowSymlinks Multiviews
</span><span class='line'>                Order deny,allow
</span><span class='line'>                Allow from all
</span><span class='line'>        <span class="nt">&lt;/Directory&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="nt">&lt;/VirtualHost&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then create the .wsgi file for running the application</p>

<figure class='code'><figcaption><span>myapplication.wsgi</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="n">activate_this</span>  <span class="o">=</span> <span class="s">&#39;/var/www/virtual/bin/activate_this.py&#39;</span>
</span><span class='line'><span class="nb">execfile</span><span class="p">(</span><span class="n">activate_this</span><span class="p">,</span> <span class="nb">dict</span><span class="p">(</span><span class="n">__file__</span><span class="o">=</span><span class="n">activate_this</span><span class="p">))</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">sys</span>
</span><span class='line'><span class="n">sys</span><span class="o">.</span><span class="n">path</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="s">&#39;/var/www/herokufinal&#39;</span><span class="p">)</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">profilebuilder</span> <span class="kn">import</span> <span class="n">app</span> <span class="k">as</span> <span class="n">application</span>
</span></code></pre></td></tr></table></div></figure>


<p>Jesus. The time it took to figure this out. Oh God, I could&#8217;ve built a fucking house by then. 12 continuous hours. Never again CentOS. Never again.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Finally got Allegro 5 working on Mac OS X]]></title>
    <link href="http://DarkSector.github.com/blog/finally-got-allegro-5-working-on-mac-os-x/"/>
    <updated>2012-07-21T20:43:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/finally-got-allegro-5-working-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>I&#8217;ve ranted about this before I was unable to get Allegro working on Mac OS X. So today, for no reason I tried it again. Followed the <a href="http://wiki.allegro.cc/index.php?title=OSX,_Xcode_4,_Framework">Wiki</a> to the letter and yet, it wouldn&#8217;t work. It was unable to find the frameworks. Specifically Allegro-5.0Framework. I did EVERYTHING and couldn&#8217;t figure it out. Until while searching for Header Search Paths in Build Settings caught my eye. There was a Framework Search Path too. And I provided it with the path /Library/Framework.</p>

<p><img src="http://f.cl.ly/items/0d2p1b3y2n2D3b0f0R1q/Screen%20Shot%202012-07-21%20at%209.42.25%20PM.png"></p>

<p>It worked and I need to kill someone now. Seriously, fuck you Xcode, fuck you.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Arduino IR code: updated]]></title>
    <link href="http://DarkSector.github.com/blog/arduino-ir-code-updated/"/>
    <updated>2012-06-26T13:34:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/arduino-ir-code-updated</id>
    <content type="html"><![CDATA[<p>Here&#8217;s my updated Arduino code that I wrote to go with the protoshield by <a href="http://www.9circuits.com">9circuits</a> and the relay shield connected to the protoshield.</p>

<p><img src="http://arduino.cc/en/uploads/Main/ArduinoUno_r2_front450px.jpg"></p>

<figure class='code'><figcaption><span>ArduinoIR.cpp</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
</pre></td><td class='code'><pre><code class='obj-c'><span class='line'><span class="kt">int</span> <span class="n">RECV_PIN</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">relay2</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
</span><span class='line'><span class="kt">int</span> <span class="n">relay1</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
</span><span class='line'><span class="kt">long</span> <span class="n">vol_down</span> <span class="o">=</span> <span class="mi">948321226</span><span class="p">;</span>
</span><span class='line'><span class="kt">long</span> <span class="n">vol_up</span> <span class="o">=</span> <span class="mi">948321218</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="n">boolean</span> <span class="n">relay1_FLAG</span> <span class="o">=</span> <span class="n">false</span><span class="p">;</span>
</span><span class='line'><span class="n">boolean</span> <span class="n">relay2_FLAG</span> <span class="o">=</span> <span class="n">false</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="cp">#include &lt;IRremote.h&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="n">IRrecv</span> <span class="n">irrecv</span><span class="p">(</span><span class="n">RECV_PIN</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="n">decode_results</span> <span class="n">results</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">setup</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="n">Serial</span><span class="p">.</span><span class="n">begin</span><span class="p">(</span><span class="mi">9600</span><span class="p">);</span>
</span><span class='line'>  <span class="n">irrecv</span><span class="p">.</span><span class="n">enableIRIn</span><span class="p">();</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">relay1</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>  <span class="n">pinMode</span><span class="p">(</span><span class="n">relay2</span><span class="p">,</span><span class="n">OUTPUT</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">check_val_execute</span><span class="p">(</span><span class="kt">long</span> <span class="n">a</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">a</span> <span class="o">==</span> <span class="n">vol_down</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">relay1_FLAG</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">light1_on</span><span class="p">();</span>
</span><span class='line'>      <span class="n">relay1_FLAG</span> <span class="o">=</span> <span class="o">!</span><span class="p">(</span><span class="n">relay1_FLAG</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">light1_off</span><span class="p">();</span>
</span><span class='line'>      <span class="n">relay1_FLAG</span> <span class="o">=</span> <span class="o">!</span><span class="p">(</span><span class="n">relay1_FLAG</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="k">else</span> <span class="k">if</span> <span class="p">(</span><span class="n">a</span> <span class="o">==</span> <span class="n">vol_up</span><span class="p">){</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">if</span> <span class="p">(</span><span class="n">relay2_FLAG</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">light2_on</span><span class="p">();</span>
</span><span class='line'>      <span class="n">relay2_FLAG</span> <span class="o">=</span> <span class="o">!</span><span class="p">(</span><span class="n">relay2_FLAG</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>    <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="n">light2_off</span><span class="p">();</span>
</span><span class='line'>      <span class="n">relay2_FLAG</span> <span class="o">=</span> <span class="o">!</span><span class="p">(</span><span class="n">relay2_FLAG</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">light1_on</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">relay1</span><span class="p">,</span><span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">light2_on</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">relay2</span><span class="p">,</span><span class="n">HIGH</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">light1_off</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">relay1</span><span class="p">,</span><span class="n">LOW</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">light2_off</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="n">digitalWrite</span><span class="p">(</span><span class="n">relay2</span><span class="p">,</span><span class="n">LOW</span><span class="p">);</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kt">void</span> <span class="nf">loop</span><span class="p">()</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="n">irrecv</span><span class="p">.</span><span class="n">decode</span><span class="p">(</span><span class="o">&amp;</span><span class="n">results</span><span class="p">))</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>    <span class="c1">//Serial.println(results.value, DEC);</span>
</span><span class='line'>    <span class="n">delay</span><span class="p">(</span><span class="mi">300</span><span class="p">);</span>
</span><span class='line'>    <span class="n">irrecv</span><span class="p">.</span><span class="n">resume</span><span class="p">();</span>
</span><span class='line'>    <span class="kt">long</span> <span class="n">x</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">value</span><span class="p">;</span>
</span><span class='line'>    <span class="n">check_val_execute</span><span class="p">(</span><span class="n">x</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>No comments yet, I&#8217;ll do that later.r</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[NASAs ISS live stream]]></title>
    <link href="http://DarkSector.github.com/blog/nasas-iss-live-stream/"/>
    <updated>2012-06-15T02:51:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/nasas-iss-live-stream</id>
    <content type="html"><![CDATA[<p>This is just a link to the stream that I need to find again and again whenever I want to tune into the NASA&#8217;s ISS Live Stream.</p>

<p><img src="http://justsap.org/wp-content/uploads/f2160nasa-international-space-station.jpg"></p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mms://a1709.l1856953708.c18569.g.lm.akamaistream.net/D/1709/18569/v0001/reflector:53708</span></code></pre></td></tr></table></div></figure>


<p>Open using VLC.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Configured Linksys WRT120N: Bye bye old Wifi]]></title>
    <link href="http://DarkSector.github.com/blog/configured-linksys-wrt120n-bye-bye-old-wifi/"/>
    <updated>2012-06-05T11:23:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/configured-linksys-wrt120n-bye-bye-old-wifi</id>
    <content type="html"><![CDATA[<p>So I finally decided to close my native router (Teracom&#8217;s) Wifi and get a proper lossless Wifi running at home. I have had the urge to use this router for a long time now. It was gifted to me by my cousin but I never got around to understanding how to deploy it. Except today. I closed the Teracom Wifi and extended an ethernet cable to the Linksys router.</p>

<p>Now earlier I wasn&#8217;t able to deploy it because I didn&#8217;t realize it ran on an extended bridged network. I thought it ran PPPoE. I mean it does run PPPoE but only via a service provider&#8217;s ethernet network. Considering over here in India we don&#8217;t have that we use a bridged network. Okay so that being said and done, I tried to plug an ethernet cable running from the Teracom (henceforth called T) to the Cisco.</p>

<p><img src="http://www.zdtronic.com/images/WRT120N.jpg"></p>

<p>It didn&#8217;t obviously work the first time (No surprised there). But strangely it was communicating with the network but not relaying packets here. Then I remembered our old exercises back from college. It was obvious, there was subnet conflict. The second router would have two networks. One terminating at it and the other originating from it.</p>

<p>So, if the first subnet was as 192.168.1.foo the other would obviously have to be different. So, the other became 192.160.1.foo and voila it worked like a charm. The problem with T&#8217;s network was that it was dropping packets a lot. I don&#8217;t know why that started happening suddenly but hey, use Cisco be safe.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Heroku is full of surprises]]></title>
    <link href="http://DarkSector.github.com/blog/heroku-is-full-of-surprises/"/>
    <updated>2012-05-29T23:47:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/heroku-is-full-of-surprises</id>
    <content type="html"><![CDATA[<p>So we finally deployed on <a href="http://heroku.com">Heroku</a> for a quick run and what do we find? The dynos idle if not used for an hour. So your app will sleep if you don&#8217;t send it a request for an hour. I was scared for a second when I realized my app had been killed because probably it refused to sleep.</p>

<p>But hey what&#8217;s this, there&#8217;s another app that sends request to wake idling apps so that the dynos won&#8217;t sleep. Enter <a href="http://www.wekkars.com/">Wekkars</a>. I mean there isn&#8217;t a puzzle created by human beings that another human being can&#8217;t solve. Well I read that in an Edgar Allan Poe book so nevermind the cheesy lines.</p>

<p>On the other hand, the good thing about Heroku is it&#8217;s ease of deployment. I mean what do you need to do really:</p>

<ol>
<li>Create your app</li>
<li>Create a Procfile that will start your app</li>
<li>Commit code to heroku master (using git)</li>
<li>Profit</li>
</ol>


<p>there&#8217;s an additional 3.5 that involves adding a helper add on but that is trivial. So Heroku is pretty good, we&#8217;ll continue testing.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[AVR Assembly revisted]]></title>
    <link href="http://DarkSector.github.com/blog/avr-assembly/"/>
    <updated>2012-05-23T23:22:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/avr-assembly</id>
    <content type="html"><![CDATA[<p>Assembly for AVR is really interesting. Back in college I wrote a number of programs and I&#8217;ve been going over them again. This is some of the code.</p>

<div><script src='https://gist.github.com/2776751.js?file='></script>
<noscript><pre><code>.ORG 0

;STACK POINTER SET
LDI R16, HIGH(RAMEND)
OUT SPH, R16
LDI R16, LOW(RAMEND)
OUT SPL, R16


MAIN:
LDI R16, 0xFF
OUT DDRC, R16

BACK:
COM R16
OUT PORTC, R16
CALL DELAY
RJMP BACK

DELAY:
LDI R17, 100
LOOP3: LDI R18, 255
LOOP2: LDI R19, 255
LOOP1: DEC R19
BRNE LOOP1
DEC R18
BRNE LOOP2
DEC R17
BRNE LOOP3
RET</code></pre></noscript></div>


<p>I have 8 LEDs connected from D0 to D7 on PORTC and they are in the source configuration. 0xFF makes them light up and 0x00 shuts them down. So this is the blinky for you.</p>

<p>Now the DELAY function can only be called if the STACKPOINTER is set. The first few lines after .ORG do just that. Now I&#8217;ll be working on timer and interrupts but first I&#8217;ll put in some more code for simple things like adding 16 bit numbers etc.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[My experience with Pymongo till now]]></title>
    <link href="http://DarkSector.github.com/blog/my-experience-with-pymongo-till-now/"/>
    <updated>2012-05-21T23:34:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/my-experience-with-pymongo-till-now</id>
    <content type="html"><![CDATA[<p>In one word, it&#8217;s been pretty awesome. <a href="http://api.mongodb.org/python/current/">PyMongo</a>, the Non relational database is pretty good. Here&#8217;s some code.</p>

<figure class='code'><figcaption><span>PyMongo insertion</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">pymongo</span> <span class="kn">import</span> <span class="n">Connection</span> <span class="k">as</span> <span class="n">c</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">45000</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">c</span><span class="p">[</span><span class="s">&#39;test_db&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">test_db</span><span class="p">[</span><span class="s">&#39;userlist&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="p">{</span><span class="s">&#39;username&#39;</span><span class="p">:</span><span class="s">&#39;pronoy&#39;</span><span class="p">,</span> <span class="s">&#39;password&#39;</span><span class="p">:</span><span class="s">&#39;foobar&#39;</span><span class="p">}</span>
</span><span class='line'><span class="n">users</span><span class="o">.</span><span class="n">insert</span><span class="p">(</span><span class="n">user</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now to retrieve the info it&#8217;s even simpler.</p>

<figure class='code'><figcaption><span>Retrieving data</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">pymongo</span> <span class="kn">import</span> <span class="n">Connection</span> <span class="k">as</span> <span class="n">c</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">45000</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">c</span><span class="p">[</span><span class="s">&#39;test_db&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">test_db</span><span class="p">[</span><span class="s">&#39;userlist&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">({</span><span class="s">&#39;username&#39;</span><span class="p">:</span><span class="s">&#39;pronoy&#39;</span><span class="p">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>The interesting this is, if the collection isn&#8217;t available it&#8217;ll create it and if the database doesn&#8217;t exist, it&#8217;ll create that too. I tried using mongodb deployed on our lab machine and the python application running on my machine. Worked like a charm.</p>

<p>Now we can also search according to the _id key generated by the BSON.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">pymongo</span> <span class="kn">import</span> <span class="n">Connection</span> <span class="k">as</span> <span class="n">c</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">bson.objectid</span> <span class="kn">import</span> <span class="n">ObjectId</span><span class="p">,</span> <span class="n">InvalidId</span>
</span><span class='line'>
</span><span class='line'><span class="n">c</span> <span class="o">=</span> <span class="n">c</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">45000</span><span class="p">)</span>
</span><span class='line'><span class="n">db</span> <span class="o">=</span> <span class="n">c</span><span class="p">[</span><span class="s">&#39;test_db&#39;</span><span class="p">]</span>
</span><span class='line'><span class="n">users</span> <span class="o">=</span> <span class="n">db</span><span class="o">.</span><span class="n">test_db</span><span class="p">[</span><span class="s">&#39;userlist&#39;</span><span class="p">]</span>
</span><span class='line'><span class="k">try</span><span class="p">:</span>
</span><span class='line'>  <span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">ObjectId</span><span class="p">(</span><span class="s">&#39;728als450000000&#39;</span><span class="p">))</span>
</span><span class='line'><span class="k">except</span> <span class="n">InvalidId</span><span class="p">:</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;No such ID exists&quot;</span>
</span><span class='line'><span class="k">else</span><span class="p">:</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="n">users</span><span class="o">.</span><span class="n">find</span><span class="p">(</span><span class="n">ObjectId</span><span class="p">(</span><span class="s">&#39;728als450000000&#39;</span><span class="p">)):</span>
</span><span class='line'>      <span class="k">print</span> <span class="n">i</span>
</span></code></pre></td></tr></table></div></figure>


<p>Took me quite a while to figure out that ObjectId and InvalidId belong to BSON and not pymongo. Either way work is good and next post I&#8217;ll share my experience with Flask-Sijax. It&#8217;s a really cool way of implementing jQuery Ajax calls.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Replaced Spotlight with QuickSilver]]></title>
    <link href="http://DarkSector.github.com/blog/replaced-spotlight-with-quicksilver/"/>
    <updated>2012-05-14T14:57:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/replaced-spotlight-with-quicksilver</id>
    <content type="html"><![CDATA[<p>So after I decided not to use mds I removed spotlight&#8217;s icon as well. Now I am using QuickSilver for the whole thing. It&#8217;s way faster.</p>

<p>Here&#8217;s a screenshot.</p>

<p><img src="http://f.cl.ly/items/1H3A2A0W0Q2A2j0E3S21/Screen%20Shot%202012-05-14%20at%202.54.46%20PM.png"></p>

<p>Yep, seems legit.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Spotlight/mds the memory hogger]]></title>
    <link href="http://DarkSector.github.com/blog/spotlight-slash-mds-the-memory-hogger/"/>
    <updated>2012-05-14T12:09:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/spotlight-slash-mds-the-memory-hogger</id>
    <content type="html"><![CDATA[<p>So in a yet another failure of an experience with the Mac Mini I have now realized why Apple is trying to put in SSD in all its products. I think it&#8217;s because of the memory hogger called mds. It is supposed sit quietly and index files but as it turns out, the bugger takes almost 50 percent of the RAM.</p>

<p><img src="http://f.cl.ly/items/3J3c3F3i1s0R1f2b1X1s/Screen%20Shot%202012-05-14%20at%2012.04.32%20PM.png"></p>

<p>The highlighted one is the one I am talking about. I think I need to disable spotlight and put in QuickSilver.</p>

<p>I shall call my app, GetLostSpotlight. The code will be on Github obviously.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Building Allegro 5.0 with Xcode 4.3 on Mac OS X 10.7.4]]></title>
    <link href="http://DarkSector.github.com/blog/building-allegro-5-dot-0-with-xcode-4-dot-3-on-mac-os-x-10-dot-7-4/"/>
    <updated>2012-05-12T17:08:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/building-allegro-5-dot-0-with-xcode-4-dot-3-on-mac-os-x-10-dot-7-4</id>
    <content type="html"><![CDATA[<p>So here&#8217;s the attempt to build <a href="http://allegro.cc">Allegro 5.0</a> on Mac OS X Lion 10.7.4 with the latest Xcode 4.3. As usual I am apprehensive of the outcome considering it&#8217;s Xcode. You never know, how it might break.</p>

<p>Anyways, let&#8217;s follow the <a href="http://wiki.allegro.cc/index.php?title=OSX,_Xcode_4,_Framework">wiki article</a> and the first step is to obviously checkout the repository. So lets do that.</p>

<figure class='code'><figcaption><span>svn checkout</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>DarkSector@DarkBookAir:~/Code<span class="nv">$ </span>svn checkout https://alleg.svn.sourceforge.net/svnroot/alleg/allegro/branches/5.0 allegro
</span><span class='line'>Error validating server certificate <span class="k">for</span> <span class="s1">&#39;https://alleg.svn.sourceforge.net:443&#39;</span>:
</span><span class='line'> - The certificate is not issued by a trusted authority. Use the
</span><span class='line'>   fingerprint to validate the certificate manually!
</span><span class='line'>Certificate information:
</span><span class='line'> - Hostname: *.svn.sourceforge.net
</span><span class='line'> - Valid: from Sat, 25 Feb 2012 23:58:41 GMT <span class="k">until </span>Sun, 31 Mar 2013 19:51:44 GMT
</span><span class='line'> - Issuer: GeoTrust, Inc., US
</span><span class='line'> - Fingerprint: 0b:11:76:de:db:4c:74:72:cb:01:49:7d:13:70:c2:f1:13:7b:cb:bf
</span><span class='line'><span class="o">(</span>R<span class="o">)</span>eject, accept <span class="o">(</span>t<span class="o">)</span>emporarily or accept <span class="o">(</span>p<span class="o">)</span>ermanently? t
</span></code></pre></td></tr></table></div></figure>


<p>Now that worked out well, downloaded the Allegro 5.0 Source. Next step is to build it using CMake but of course I didn&#8217;t have CMake so let&#8217;s download that</p>

<figure class='code'><figcaption><span>CMake download</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>DarkSector@DarkBookAir:~<span class="nv">$ </span>brew install <span class="nv">cmake</span>
</span><span class='line'><span class="o">==</span>&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/cmake-2.8.8.lio
</span><span class='line'><span class="c">######################################################################## 100.0%</span>
</span><span class='line'><span class="o">==</span>&gt; Pouring cmake-2.8.8.lion.bottle.1.tar.gz
</span><span class='line'>/usr/local/Cellar/cmake/2.8.8: 652 files, 30M
</span></code></pre></td></tr></table></div></figure>


<p>Yep that did it. Now to use CMake on the source</p>

<figure class='code'><figcaption><span>Building Allegro using CMake</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>DarkSector@DarkBookAir:~/Code/allegro<span class="nv">$ </span>mkdir build <span class="o">&amp;&amp;</span> <span class="nb">cd </span>build
</span><span class='line'>DarkSector@DarkBookAir:~/Code/allegro/build<span class="nv">$ </span>cmake -G Xcode -DWANT_FRAMEWORKS<span class="o">=</span>1 - ..-- The C compiler identification is GNU 4.2.1
</span><span class='line'>-- The CXX compiler identification is GNU 4.2.1
</span><span class='line'>-- Checking whether C compiler has -isysroot
</span><span class='line'>-- Checking whether C compiler has -isysroot - yes
</span><span class='line'>-- Checking whether C compiler supports OSX deployment target flag
</span><span class='line'>-- Checking whether C compiler supports OSX deployment target flag - yes
</span><span class='line'>-- Check <span class="k">for </span>working C compiler using: Xcode
</span><span class='line'>-- Check <span class="k">for </span>working C compiler using: Xcode -- works
</span><span class='line'>-- Detecting C compiler ABI info
</span><span class='line'>-- Detecting C compiler ABI info - <span class="k">done</span>
</span><span class='line'>-- Checking whether CXX compiler has -isysroot
</span><span class='line'>-- Checking whether CXX compiler has -isysroot - yes
</span><span class='line'>-- Checking whether CXX compiler supports OSX deployment target flag
</span><span class='line'>-- Checking whether CXX compiler supports OSX deployment target flag - yes
</span><span class='line'>-- Check <span class="k">for </span>working CXX compiler using: Xcode
</span><span class='line'>-- Check <span class="k">for </span>working CXX compiler using: Xcode -- works
</span><span class='line'>-- Detecting CXX compiler ABI info
</span><span class='line'>-- Detecting CXX compiler ABI info - <span class="k">done</span>
</span><span class='line'>-- Allowing GCC to use SSE instructions
</span><span class='line'>-- Could NOT find PkgConfig <span class="o">(</span>missing:  PKG_CONFIG_EXECUTABLE<span class="o">)</span>
</span><span class='line'>-- Check <span class="k">if </span>the system is big endian
</span><span class='line'>-- Searching 16 bit integer
</span><span class='line'>-- Looking <span class="k">for </span>sys/types.h
</span><span class='line'>-- Looking <span class="k">for </span>sys/types.h - found
</span><span class='line'>-- Looking <span class="k">for </span>stdint.h
</span><span class='line'>-- Looking <span class="k">for </span>stdint.h - found
</span><span class='line'>-- Looking <span class="k">for </span>stddef.h
</span><span class='line'>-- Looking <span class="k">for </span>stddef.h - found
</span><span class='line'>-- Check size of unsigned short
</span><span class='line'>-- Check size of unsigned short - <span class="k">done</span>
</span><span class='line'>-- Using unsigned short
</span><span class='line'>-- Check <span class="k">if </span>the system is big endian - little endian
</span><span class='line'>-- Looking <span class="k">for </span>include file dirent.h
</span><span class='line'>-- Looking <span class="k">for </span>include file dirent.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file inttypes.h
</span><span class='line'>-- Looking <span class="k">for </span>include file inttypes.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include files sys/types.h, linux/joystick.h
</span><span class='line'>-- Looking <span class="k">for </span>include files sys/types.h, linux/joystick.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file stdbool.h
</span><span class='line'>-- Looking <span class="k">for </span>include file stdbool.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file stdint.h
</span><span class='line'>-- Looking <span class="k">for </span>include file stdint.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/io.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/io.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/stat.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/stat.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/time.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/time.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file time.h
</span><span class='line'>-- Looking <span class="k">for </span>include file time.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/utsname.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/utsname.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/types.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/types.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file soundcard.h
</span><span class='line'>-- Looking <span class="k">for </span>include file soundcard.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/soundcard.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/soundcard.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file machine/soundcard.h
</span><span class='line'>-- Looking <span class="k">for </span>include file machine/soundcard.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file linux/soundcard.h
</span><span class='line'>-- Looking <span class="k">for </span>include file linux/soundcard.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file libkern/OSAtomic.h
</span><span class='line'>-- Looking <span class="k">for </span>include file libkern/OSAtomic.h - found
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/inotify.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/inotify.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/timerfd.h
</span><span class='line'>-- Looking <span class="k">for </span>include file sys/timerfd.h - not found.
</span><span class='line'>-- Looking <span class="k">for </span>getexecname
</span><span class='line'>-- Looking <span class="k">for </span>getexecname - not found
</span><span class='line'>-- Looking <span class="k">for </span>mkstemp
</span><span class='line'>-- Looking <span class="k">for </span>mkstemp - found
</span><span class='line'>-- Looking <span class="k">for </span>mmap
</span><span class='line'>-- Looking <span class="k">for </span>mmap - found
</span><span class='line'>-- Looking <span class="k">for </span>mprotect
</span><span class='line'>-- Looking <span class="k">for </span>mprotect - found
</span><span class='line'>-- Looking <span class="k">for </span>sched_yield
</span><span class='line'>-- Looking <span class="k">for </span>sched_yield - found
</span><span class='line'>-- Looking <span class="k">for </span>sysconf
</span><span class='line'>-- Looking <span class="k">for </span>sysconf - found
</span><span class='line'>-- Looking <span class="k">for </span>fseeko
</span><span class='line'>-- Looking <span class="k">for </span>fseeko - found
</span><span class='line'>-- Looking <span class="k">for </span>ftello
</span><span class='line'>-- Looking <span class="k">for </span>ftello - found
</span><span class='line'>-- Check size of _Bool
</span><span class='line'>-- Check size of _Bool - <span class="k">done</span>
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_PROCFS_ARGCV
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_PROCFS_ARGCV - Failed
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_SV_PROCFS_H
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_SV_PROCFS_H - Failed
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_VA_COPY
</span><span class='line'>-- Performing Test ALLEGRO_HAVE_VA_COPY - Success
</span><span class='line'>-- Check <span class="k">if </span>constructors are supported - yes
</span><span class='line'>-- Found OpenGL: /System/Library/Frameworks/OpenGL.framework
</span><span class='line'>-- Looking <span class="k">for </span>include file pthread.h
</span><span class='line'>-- Looking <span class="k">for </span>include file pthread.h - found
</span><span class='line'>-- Looking <span class="k">for </span>pthread_create
</span><span class='line'>-- Looking <span class="k">for </span>pthread_create - found
</span><span class='line'>-- Found Threads: TRUE
</span><span class='line'>-- Found OpenAL: /System/Library/Frameworks/OpenAL.framework
</span><span class='line'>-- Could NOT find FLAC <span class="o">(</span>missing:  FLAC_INCLUDE_DIR FLAC_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libFLAC not found or compile <span class="nb">test </span>failed, disabling support.
</span><span class='line'>-- Could NOT find DUMB <span class="o">(</span>missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libdumb not found or compile <span class="nb">test </span>failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
</span><span class='line'>-- Found OGG: /Library/Frameworks/ogg.framework
</span><span class='line'>-- Could NOT find VORBIS <span class="o">(</span>missing:  VORBISFILE_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libvorbis not found or compile <span class="nb">test </span>failed, disabling support.
</span><span class='line'>-- Found Freetype: /Library/Frameworks/freetype.framework
</span><span class='line'>-- Found ZLIB: /usr/lib/libz.dylib <span class="o">(</span>found version <span class="s2">&quot;1.2.5&quot;</span><span class="o">)</span>
</span><span class='line'>-- Found PhysFS: /Library/Frameworks/physfs.framework
</span><span class='line'>-- Found PHYSFS: /Library/Frameworks/physfs.framework
</span><span class='line'>-- Performing Test PHYSFS_IMPLICIT_ZLIB
</span><span class='line'>-- Performing Test PHYSFS_IMPLICIT_ZLIB - Success
</span><span class='line'>-- Configuring <span class="k">done</span>
</span><span class='line'>-- Generating <span class="k">done</span>
</span><span class='line'>-- Build files have been written to: /Users/DarkSector/Code/allegro/build
</span></code></pre></td></tr></table></div></figure>


<p>Woah hang on there a minute. No FLAC support, no DUMB and no VORBIS. Hmm, okay let&#8217;s get that too. I mean while we&#8217;re at it what&#8217;s the point in leaving it out. So let&#8217;s build FLAC, VORBIS, DUMB</p>

<figure class='code'><figcaption><span>dumb vorbis flac and pkgconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>DarkSector@DarkBookAir:~/Code/allegro/build<span class="nv">$ </span>brew install flac; brew install libvorbis <span class="o">&amp;&amp;</span> brew install pkgconfig
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>After installing libvorbis libflac and pkgconfig</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>DarkSector@DarkBookAir:~/Code/allegro/build<span class="nv">$ </span>cmake -G Xcode -D <span class="nv">WANT_FRAMEWORKS</span><span class="o">=</span>1 - ..
</span><span class='line'>-- Allowing GCC to use SSE instructions
</span><span class='line'>-- Found PkgConfig: /usr/local/bin/pkg-config <span class="o">(</span>found version <span class="s2">&quot;0.25&quot;</span><span class="o">)</span>
</span><span class='line'>-- Could NOT find FLAC <span class="o">(</span>missing:  FLAC_INCLUDE_DIR FLAC_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libFLAC not found or compile <span class="nb">test </span>failed, disabling support.
</span><span class='line'>-- Could NOT find DUMB <span class="o">(</span>missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libdumb not found or compile <span class="nb">test </span>failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
</span><span class='line'>-- Performing Test VORBIS_COMPILES
</span><span class='line'>-- Performing Test VORBIS_COMPILES - Success
</span><span class='line'>-- Configuring <span class="k">done</span>
</span><span class='line'>-- Generating <span class="k">done</span>
</span><span class='line'>-- Build files have been written to: /Users/DarkSector/Code/allegro/build
</span><span class='line'>DarkSector@DarkBookAir:~/Code/allegro/build<span class="nv">$ </span>cmake -G Xcode -DWANT_FRAMEWORKS<span class="o">=</span>1 - ..
</span><span class='line'>-- Allowing GCC to use SSE instructions
</span><span class='line'>-- Found FLAC: /usr/local/include
</span><span class='line'>-- Performing Test FLAC_COMPILES
</span><span class='line'>-- Performing Test FLAC_COMPILES - Success
</span><span class='line'>-- Could NOT find DUMB <span class="o">(</span>missing:  DUMB_INCLUDE_DIR DUMB_LIBRARY<span class="o">)</span>
</span><span class='line'>WARNING: libdumb not found or compile <span class="nb">test </span>failed, disabling support. &lt;http://dumb.sourceforge.net/&gt;
</span><span class='line'>-- Configuring <span class="k">done</span>
</span><span class='line'>-- Generating <span class="k">done</span>
</span><span class='line'>-- Build files have been written to: /Users/DarkSector/Code/allegro/build
</span></code></pre></td></tr></table></div></figure>


<p>So as it turns out there is no libdumb formula on brew. I think I&#8217;ll contribute and add it. That&#8217;ll be pretty cool. Anyways back to the job at hand.</p>

<p>So that&#8217;s built it. Now to start programming I guess.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A pain that is a new mac]]></title>
    <link href="http://DarkSector.github.com/blog/a-pain-that-is-a-new-mac/"/>
    <updated>2012-05-11T13:26:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/a-pain-that-is-a-new-mac</id>
    <content type="html"><![CDATA[<p>Once the novelty of getting a new mac has worn off, the real trouble sets in. Configuring it. Now the worst part about developing on a Mac is the downloading of Xcode and installing it. Xcode is by far the shittiest and the most disgusting piece of software designed by Apple. Now in order to get the latest Xcode you&#8217;ll need to upgrade to the latest OS. Currently it&#8217;s <del>10.7.3</del> 10.7.4.</p>

<p>So to get Xcode 4.3 you need to first upgrade to <del>10.7.3</del> 10.7.4 and then go through the motions of getting Xcode first and then letting it install itself.</p>

<p>Since most of the packages need to be built, it&#8217;s necessary to have GCC 4.2-llvm or clang installed and that comes only with Xcode. So till the time you get it, you can&#8217;t use Machomebrew or most of the Python packages.</p>

<p><img src="http://f.cl.ly/items/2R3n1y0x2a0X1r193829/Screen%20Shot%202012-05-12%20at%201.59.43%20PM.png"></p>

<p>I guess I&#8217;ll have to take this POS home and then put it on a continuous install. Thanks a lot Apple. So much for your design.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Command line pastebin]]></title>
    <link href="http://DarkSector.github.com/blog/command-line-pastebin/"/>
    <updated>2012-05-06T22:45:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/command-line-pastebin</id>
    <content type="html"><![CDATA[<p>Found out about a command line pastebin. I really like the example. it&#8217;s simple for instance, you&#8217;d like the output of /foo/bar directly on pastebin, you do this.</p>

<figure class='code'><figcaption><span>Sprunge</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>cat /foo/bar | curl -F <span class="s1">&#39;sprunge=&lt;-&#39;</span> http://sprunge.us
</span><span class='line'>  http://sprunge.us/Zi1Lk
</span></code></pre></td></tr></table></div></figure>


<p>Yep, <a href="http://sprunge.us/">Sprunge.us</a>
It&#8217;s source resides on <a href="http://github.com/rupa/sprunge">Github</a></p>

<p>Of course writing the whole syntax will loose it&#8217;s novelty, so I advise you to use an alias for the same.</p>

<figure class='code'><figcaption><span>pastebin</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;alias = \&quot;curl -F &#39;sprunge=&lt;-&#39; http://sprunge.us\&quot;&quot;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span></code></pre></td></tr></table></div></figure>


<p>Yep, that will add an alias to your bash_profile and then source it to use the commands immediately</p>

<h2>Here&#8217;s how it&#8217;ll look</h2>

<figure class='code'><figcaption><span>Using pastie as an alias</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">echo</span> <span class="s2">&quot;alias pastie=\&quot;curl -F &#39;sprunge=&lt;-&#39; http://sprunge.us\&quot;&quot;</span> &gt;&gt; ~/.bash_profile
</span><span class='line'><span class="nv">$ </span><span class="nb">source</span> ~/.bash_profile
</span><span class='line'><span class="nv">$ </span>brew doctor | pastie
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[lsusb equivalent on Mac OS X]]></title>
    <link href="http://DarkSector.github.com/blog/lsusb-equivalent-on-mac-os-x/"/>
    <updated>2012-05-05T22:58:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/lsusb-equivalent-on-mac-os-x</id>
    <content type="html"><![CDATA[<p>Strangely there is no lsusb on Mac OS X. So I searched and found this command</p>

<figure class='code'><figcaption><span>system_profiler</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>system_profiler SPUSBDataType
</span></code></pre></td></tr></table></div></figure>


<p>Check out the man page for system_profiler, it&#8217;s got loads of options.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Single Trigger Terminal Hack Mac OS X Lion]]></title>
    <link href="http://DarkSector.github.com/blog/single-trigger-terminal-hack-mac-os-x-lion/"/>
    <updated>2012-05-04T16:36:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/single-trigger-terminal-hack-mac-os-x-lion</id>
    <content type="html"><![CDATA[<p>My Macbook Air has all its function keys multiplexed with other special functions like Sound up, Sound down, Mute, etc. Now, I really need to pop up the terminal again and again when I am working and even third party applications like <a href="http://totalterminal.binaryage.com/">TotalTerminal</a> still use a combo. Default being <span class="label label-info">ctrl+~</span>. This is frustrating for someone who&#8217;s used Guake on Linux. <span class="badge badge-info">F12</span>, I miss you so much.</p>

<p>So what do we do. We hack <em>zey keyboard</em>. Well not really hack it, just have two modes to work. Because I love the sound up and sound down keys along with iTunes trigger. Makes life easier. I am not going to explain the whole code because it&#8217;s pretty self explanatory, comments should help. Should take just one day of your weekend if you&#8217;re new.</p>

<p>So let&#8217;s AppleScript it.</p>

<figure class='code'><figcaption><span>Terminal.script</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span> <span class="n">to</span> <span class="n">set</span> <span class="n">TerminalisRunning</span> <span class="n">to</span> <span class="p">(</span><span class="n">name</span> <span class="n">of</span> <span class="n">processes</span><span class="p">)</span> <span class="n">contains</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'><span class="c1">-- check whether the terminal is running</span>
</span><span class='line'><span class="c1">-- TerminalisRunning is true or false if the process Terminal is running</span>
</span><span class='line'><span class="k">if</span> <span class="n">TerminalisRunning</span> <span class="k">then</span>
</span><span class='line'>  <span class="c1">-- Check, is the terminal visible?</span>
</span><span class='line'>  <span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span> <span class="n">to</span> <span class="n">set</span> <span class="n">TerminalisVisible</span> <span class="n">to</span> <span class="n">visible</span> <span class="n">of</span> <span class="n">process</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'>  <span class="c1">-- TerminalisVisible will now contain true or false if the Terminal is visible or not respectively</span>
</span><span class='line'>  <span class="n">set</span> <span class="n">AppInFront</span> <span class="n">to</span> <span class="n">name</span> <span class="n">of</span> <span class="p">(</span><span class="n">info</span> <span class="k">for</span> <span class="p">(</span><span class="n">path</span> <span class="n">to</span> <span class="n">frontmost</span> <span class="n">application</span><span class="p">))</span>
</span><span class='line'>  <span class="c1">-- set the variable AppInFront to the name of which application is in the front</span>
</span><span class='line'>  
</span><span class='line'>  <span class="k">if</span> <span class="n">TerminalisVisible</span> <span class="ow">and</span> <span class="n">AppInFront</span> <span class="n">is</span> <span class="s2">&quot;</span><span class="s">Terminal.app&quot;</span> <span class="k">then</span>
</span><span class='line'>      
</span><span class='line'>      <span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span> <span class="n">to</span> <span class="n">set</span> <span class="n">visible</span> <span class="n">of</span> <span class="n">process</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span> <span class="n">to</span> <span class="kc">false</span>
</span><span class='line'>      <span class="c1">-- hides the terminal if its process is visible and is on the top</span>
</span><span class='line'>      
</span><span class='line'>  <span class="k">else</span> <span class="k">if</span> <span class="n">TerminalisVisible</span> <span class="ow">and</span> <span class="n">AppInFront</span> <span class="n">is</span> <span class="ow">not</span> <span class="s2">&quot;</span><span class="s">Terminal.app&quot;</span> <span class="k">then</span>
</span><span class='line'>      <span class="c1">-- if terminal&#39;s process is visible but it&#39;s behind some application</span>
</span><span class='line'>      <span class="c1">-- then bring to front</span>
</span><span class='line'>      <span class="n">activate</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'>      
</span><span class='line'>  <span class="k">else</span> <span class="k">if</span> <span class="ow">not</span> <span class="n">TerminalisVisible</span> <span class="k">then</span>
</span><span class='line'>      <span class="c1">-- if it&#39;s process isn&#39;t visible then it activates it</span>
</span><span class='line'>      <span class="n">activate</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'>  <span class="k">end</span> <span class="k">if</span>
</span><span class='line'><span class="k">else</span>
</span><span class='line'>  <span class="c1">-- start the application</span>
</span><span class='line'>  <span class="n">activate</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'><span class="k">end</span> <span class="k">if</span>
</span></code></pre></td></tr></table></div></figure>


<p>The syntax is very easy. So whenever the script is run, if the terminal is running it&#8217;ll bring to the front and when it is ran again, it&#8217;ll hide it. If it&#8217;s not running, it&#8217;ll start it.</p>

<p>But the question is how to start it in the first place? Answer is pretty simple <a href="http://www.red-sweater.com/fastscripts/">FastScripts</a>. You can run 10 scripts with the free version. I simply put the script in a new folder name it foo or whatever and in the preferences assign the key <span class="badge badge-info"><strong>F12</strong></span> to it.</p>

<p>There&#8217;s another problem, <span class="badge badge-info"><strong>F12</strong></span> also gets you to Dashboard. So go to System Preferences and remove that feature.</p>

<p><img class="center" src="http://cl.ly/1s0I310w381E0r3Y3m1d/Screen%20Shot%202012-05-04%20at%205.25.09%20PM.png"></p>

<p>Also, switch the keys permanently here.
<img class="center" src="http://cl.ly/1E0e2j3Z1X2g2b2D2C3a/Screen%20Shot%202012-05-04%20at%205.31.58%20PM.png"></p>

<p>So now we&#8217;re down to one problem, I&#8217;d like to use the special keys too. So let&#8217;s make another mode for that.</p>

<figure class='code'><figcaption><span>DeveloperMode.script</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="c1">-- check if GROWL is running</span>
</span><span class='line'><span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span>
</span><span class='line'>  <span class="n">set</span> <span class="n">isRunning</span> <span class="n">to</span> <span class="p">(</span><span class="n">count</span> <span class="n">of</span> <span class="p">(</span><span class="n">every</span> <span class="n">process</span> <span class="n">whose</span> <span class="n">bundle</span> <span class="n">identifier</span> <span class="n">is</span> <span class="s2">&quot;</span><span class="s">com.Growl.GrowlHelperApp&quot;</span><span class="p">))</span> <span class="o">&gt;</span> <span class="mi">0</span>
</span><span class='line'><span class="k">end</span> <span class="n">tell</span>
</span><span class='line'>
</span><span class='line'><span class="c1">-- check if UI scripting is ON</span>
</span><span class='line'><span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="ow">not</span> <span class="n">UI</span> <span class="n">elements</span> <span class="n">enabled</span> <span class="k">then</span>
</span><span class='line'>      <span class="n">set</span> <span class="n">UI</span> <span class="n">elements</span> <span class="n">enabled</span> <span class="n">to</span> <span class="kc">true</span>
</span><span class='line'>  <span class="k">end</span> <span class="k">if</span>
</span><span class='line'><span class="k">end</span> <span class="n">tell</span>
</span><span class='line'>
</span><span class='line'>
</span><span class='line'><span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Events&quot;</span>
</span><span class='line'>  <span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Preferences&quot;</span>
</span><span class='line'>      <span class="n">reveal</span> <span class="n">anchor</span> <span class="s2">&quot;</span><span class="s">keyboardTab&quot;</span> <span class="n">of</span> <span class="n">pane</span> <span class="s2">&quot;</span><span class="s">com.apple.preference.keyboard&quot;</span>
</span><span class='line'>  <span class="k">end</span> <span class="n">tell</span>
</span><span class='line'>  <span class="n">click</span> <span class="n">checkbox</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">tab</span> <span class="n">group</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">window</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">application</span> <span class="n">process</span> <span class="s2">&quot;</span><span class="s">System Preferences&quot;</span>
</span><span class='line'>  <span class="k">if</span> <span class="n">value</span> <span class="n">of</span> <span class="n">checkbox</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">tab</span> <span class="n">group</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">window</span> <span class="mi">1</span> <span class="n">of</span> <span class="n">application</span> <span class="n">process</span> <span class="s2">&quot;</span><span class="s">System Preferences&quot;</span> <span class="n">is</span> <span class="mi">1</span> <span class="k">then</span>
</span><span class='line'>      
</span><span class='line'>      <span class="k">if</span> <span class="n">isRunning</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">tell</span> <span class="n">application</span> <span class="n">id</span> <span class="s2">&quot;</span><span class="s">com.Growl.GrowlHelperApp&quot;</span>
</span><span class='line'>              <span class="c1">-- Make a list of all the notification types </span>
</span><span class='line'>              <span class="c1">-- that this script will ever send:</span>
</span><span class='line'>              <span class="n">set</span> <span class="n">the</span> <span class="n">allNotificationsList</span> <span class="n">to</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="p">{</span><span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span><span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">-- Make a list of the notifications </span>
</span><span class='line'>              <span class="c1">-- that will be enabled by default.      </span>
</span><span class='line'>              <span class="c1">-- Those not enabled by default can be enabled later </span>
</span><span class='line'>              <span class="c1">-- in the &#39;Applications&#39; tab of the growl prefpane.</span>
</span><span class='line'>              <span class="n">set</span> <span class="n">the</span> <span class="n">enabledNotificationsList</span> <span class="n">to</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="p">{</span><span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span><span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">-- Register our script with growl.</span>
</span><span class='line'>              <span class="c1">-- You can optionally (as here) set a default icon </span>
</span><span class='line'>              <span class="c1">-- for this script&#39;s notifications.</span>
</span><span class='line'>              <span class="n">register</span> <span class="n">as</span> <span class="n">application</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Seed Notifier&quot;</span> <span class="n">all</span> <span class="n">notifications</span> <span class="n">allNotificationsList</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="n">default</span> <span class="n">notifications</span> <span class="n">enabledNotificationsList</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="n">icon</span> <span class="n">of</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'>              
</span><span class='line'>              
</span><span class='line'>              <span class="n">notify</span> <span class="n">with</span> <span class="n">name</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span> <span class="n">title</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span> <span class="n">description</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">You can now use Developer keys&quot;</span> <span class="n">application</span> <span class="n">name</span> <span class="s2">&quot;</span><span class="s">Seed Notifier&quot;</span>
</span><span class='line'>              
</span><span class='line'>          <span class="k">end</span> <span class="n">tell</span>
</span><span class='line'>      <span class="k">end</span> <span class="k">if</span>
</span><span class='line'>      
</span><span class='line'>  <span class="k">else</span>
</span><span class='line'>      <span class="k">if</span> <span class="n">isRunning</span> <span class="k">then</span>
</span><span class='line'>          <span class="n">tell</span> <span class="n">application</span> <span class="n">id</span> <span class="s2">&quot;</span><span class="s">com.Growl.GrowlHelperApp&quot;</span>
</span><span class='line'>              <span class="c1">-- Make a list of all the notification types </span>
</span><span class='line'>              <span class="c1">-- that this script will ever send:</span>
</span><span class='line'>              <span class="n">set</span> <span class="n">the</span> <span class="n">allNotificationsList</span> <span class="n">to</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="p">{</span><span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span><span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">-- Make a list of the notifications </span>
</span><span class='line'>              <span class="c1">-- that will be enabled by default.      </span>
</span><span class='line'>              <span class="c1">-- Those not enabled by default can be enabled later </span>
</span><span class='line'>              <span class="c1">-- in the &#39;Applications&#39; tab of the growl prefpane.</span>
</span><span class='line'>              <span class="n">set</span> <span class="n">the</span> <span class="n">enabledNotificationsList</span> <span class="n">to</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="p">{</span><span class="s2">&quot;</span><span class="s">Developer Mode ON&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span><span class="p">}</span>
</span><span class='line'>              
</span><span class='line'>              <span class="c1">-- Register our script with growl.</span>
</span><span class='line'>              <span class="c1">-- You can optionally (as here) set a default icon </span>
</span><span class='line'>              <span class="c1">-- for this script&#39;s notifications.</span>
</span><span class='line'>              <span class="n">register</span> <span class="n">as</span> <span class="n">application</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Seed Notifier&quot;</span> <span class="n">all</span> <span class="n">notifications</span> <span class="n">allNotificationsList</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="n">default</span> <span class="n">notifications</span> <span class="n">enabledNotificationsList</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="n">icon</span> <span class="n">of</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">Terminal&quot;</span>
</span><span class='line'>              
</span><span class='line'>              
</span><span class='line'>              <span class="n">notify</span> <span class="n">with</span> <span class="n">name</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span> <span class="n">title</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Developer Mode OFF&quot;</span> <span class="n">description</span> <span class="err">¬</span>
</span><span class='line'>                  <span class="s2">&quot;</span><span class="s">Back to the original layout&quot;</span> <span class="n">application</span> <span class="n">name</span> <span class="s2">&quot;</span><span class="s">Seed Notifier&quot;</span>
</span><span class='line'>              
</span><span class='line'>              
</span><span class='line'>          <span class="k">end</span> <span class="n">tell</span>
</span><span class='line'>      <span class="k">end</span> <span class="k">if</span>        
</span><span class='line'>      
</span><span class='line'>  <span class="k">end</span> <span class="k">if</span>
</span><span class='line'><span class="k">end</span> <span class="n">tell</span>
</span><span class='line'><span class="c1">-- QUIT SYSTEM PREFERENCCES APPLICATION</span>
</span><span class='line'><span class="k">if</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Preferences&quot;</span> <span class="n">is</span> <span class="n">running</span> <span class="k">then</span>
</span><span class='line'>  <span class="n">tell</span> <span class="n">application</span> <span class="s2">&quot;</span><span class="s">System Preferences&quot;</span> <span class="n">to</span> <span class="n">quit</span>
</span><span class='line'><span class="k">end</span> <span class="k">if</span>
</span></code></pre></td></tr></table></div></figure>


<p>I made this script trigger with the combination <span class="label label-info">ctrl+ ⌘+]</span> so that it may switch between developer mode and normal mode. I also updated the script with Growl Notification which I find is pretty cool &lt;/proud&gt;</p>

<p>One successful weekend I&#8217;d say. I also might develop further on this application and hence the name Seed. Don&#8217;t ask me what it stands for, it&#8217;s just a name.</p>

<p>You can find the code <a href="https://github.com/DarkSector/AppleScripts">here</a> on Github.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrating from MongoAlchemy]]></title>
    <link href="http://DarkSector.github.com/blog/migrating-from-mongoalchemy/"/>
    <updated>2012-05-02T22:59:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/migrating-from-mongoalchemy</id>
    <content type="html"><![CDATA[<p>Extensions like <a href="http://packages.python.org/Flask-MongoAlchemy/">Flask-MongoAlchemy</a> and <a href="http://flask.pocoo.org/docs/patterns/mongokit/">Flask-MongoKit</a> are probably the most useless extensions for <a href="http://flask.pocoo.org/">Flask</a> because they ignore the inherent reason why Mongo is to be used. What is the point of using <a href="http://www.mongodb.org/">MongoDB</a> when you are going to used a fix schema. A fixed model declaration should be used with RDBMS like PostGRE and SQLite by using <a href="http://www.sqlalchemy.org/">SQLAlchemy</a>.</p>

<p>I wonder why hasn&#8217;t anyone come up with this question before. Either way I&#8217;ll be using PyMongo now. Flask has an extension for that, it&#8217;s called <a href="http://flask-pymongo.readthedocs.org/en/0-1/index.html">Flask-PyMongo</a>.</p>

<h2>MongoDB Basics</h2>

<p>Here&#8217;re some interesting relations between SQL and MongoDB&#8217;s way of organizing things.</p>

<table class="table table-bordered table-striped">
    <thead>
        <tr>
            <th>SQL</th>
            <th>MongoDB</th>
        </tr>   
    </thead>
    <tbody> 
        <tr>
            <td>Database</td>
            <td>Database</td>
        </tr>
        <tr>
            <td>Table</td>
            <td>Collection</td>
        </tr>
        <tr>
            <td>Row</td>
            <td>Document</td>
        </tr>
        <tr>
            <td>Index</td>
            <td>Index</td>
        </tr>
        <tr>
            <td>Primary key</td>
            <td>_id field</td>
        </tr>
    </tbody>
</table>


<p>A complete list of relations is given in the mapping chart over at <a href="http://www.mongodb.org/display/DOCS/SQL+to+Mongo+Mapping+Chart">MongoDB&#8217;s website</a></p>

<p>This is neat considering you don&#8217;t need any fixed schema, just stash the data in and you can easily recover it. So now instead of using MongoAlchemy we will be using PyMongo directly which is fairly easy as well.</p>

<h2>Why Mongo with Python makes sense</h2>

<p>Python Dicts and Mongo&#8217;s BSON documents are just the same. So passing dicts as documents is fairly intuitive. Here&#8217;s a comparison:</p>

<figure class='code'><figcaption><span>dict.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="o">&gt;&gt;&gt;</span> <span class="n">a</span> <span class="o">=</span> <span class="p">{</span><span class="s">&quot;a&quot;</span> <span class="p">:</span> <span class="s">&quot;b&quot;</span><span class="p">,</span> <span class="s">&quot;c&quot;</span> <span class="p">:</span> <span class="s">&quot;d&quot;</span><span class="p">,</span> <span class="s">&quot;k&quot;</span> <span class="p">:</span> <span class="mi">3</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>MongoDB schema example</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nx">_id</span> <span class="o">:</span> <span class="nx">ObjectId</span><span class="p">(</span><span class="s2">&quot;4e77bb3b8a3e000000004f7a&quot;</span><span class="p">),</span>
</span><span class='line'>  <span class="nx">when</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">&quot;2011-09-19T02:10:11.3Z&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">author</span> <span class="o">:</span> <span class="s2">&quot;alex&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">title</span> <span class="o">:</span> <span class="s2">&quot;No Free Lunch&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">text</span> <span class="o">:</span> <span class="s2">&quot;This is the text of the post.  It could be very long.&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">tags</span> <span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;business&quot;</span><span class="p">,</span> <span class="s2">&quot;ramblings&quot;</span> <span class="p">],</span>
</span><span class='line'>  <span class="nx">votes</span> <span class="o">:</span> <span class="mi">5</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">voters</span> <span class="o">:</span> <span class="p">[</span> <span class="s2">&quot;jane&quot;</span><span class="p">,</span> <span class="s2">&quot;joe&quot;</span><span class="p">,</span> <span class="s2">&quot;spencer&quot;</span><span class="p">,</span> <span class="s2">&quot;phyllis&quot;</span><span class="p">,</span> <span class="s2">&quot;li&quot;</span> <span class="p">],</span>
</span><span class='line'>  <span class="nx">comments</span> <span class="o">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">who</span> <span class="o">:</span> <span class="s2">&quot;jane&quot;</span><span class="p">,</span> <span class="nx">when</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">&quot;2011-09-19T04:00:10.112Z&quot;</span><span class="p">),</span>
</span><span class='line'>      <span class="nx">comment</span> <span class="o">:</span> <span class="s2">&quot;I agree.&quot;</span> <span class="p">},</span>
</span><span class='line'>    <span class="p">{</span> <span class="nx">who</span> <span class="o">:</span> <span class="s2">&quot;meghan&quot;</span><span class="p">,</span> <span class="nx">when</span> <span class="o">:</span> <span class="nb">Date</span><span class="p">(</span><span class="s2">&quot;2011-09-20T14:36:06.958Z&quot;</span><span class="p">),</span>
</span><span class='line'>      <span class="nx">comment</span> <span class="o">:</span> <span class="s2">&quot;You must be joking.  etc etc ...&quot;</span> <span class="p">}</span>
</span><span class='line'>  <span class="p">]</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>It&#8217;s similar and therefore easier.</p>

<h2>PyMongo Usage</h2>

<figure class='code'><figcaption><span>start the mongo daemon on any port and application directory to store database</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongod --port 45000 --dbpath <span class="nv">$PATHTOAPPLICATIONDIRECTORY</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#import pymongo and make the connection</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">pymongo</span> <span class="kn">import</span> <span class="n">Connection</span>
</span><span class='line'><span class="c">#connect it to the mongo daemon running on the port</span>
</span><span class='line'><span class="n">connection</span> <span class="o">=</span> <span class="n">Connection</span><span class="p">(</span><span class="s">&#39;localhost&#39;</span><span class="p">,</span> <span class="mi">45000</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>After that we&#8217;ll need to start creating databases and collections and inserting documents, I&#8217;ll post the code later when I am done with general implementation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[A random graph using d3.js]]></title>
    <link href="http://DarkSector.github.com/blog/a-random-graph-using-d3-dot-js/"/>
    <updated>2012-05-01T19:17:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/a-random-graph-using-d3-dot-js</id>
    <content type="html"><![CDATA[<p><a href="http://d3js.org">D3.js</a> created by <a href="http://bost.ocks.org/mike/">Mike Bostock</a> is basically a javascript library that allows you to create documents based on data. The name D3 means Data Driven Documents and is a very nifty library to represent data on the web.
I came across this when I was looking for ways to represent data in real time on a web browser. I am trying to create data acquisition devices that do that. I&#8217;ve also been working on Python for that same thing but I&#8217;ll get to that later.</p>

<p>So I have this random graph on my homepage, it&#8217;s just an edited version of an <a href="http://mbostock.github.com/d3/ex/stack.html">example</a> on the d3 page. Here&#8217;s the code if you want to take a look at it.</p>

<figure class='code'><figcaption><span>stack.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
<span class='line-number'>96</span>
<span class='line-number'>97</span>
<span class='line-number'>98</span>
<span class='line-number'>99</span>
<span class='line-number'>100</span>
<span class='line-number'>101</span>
<span class='line-number'>102</span>
<span class='line-number'>103</span>
<span class='line-number'>104</span>
<span class='line-number'>105</span>
<span class='line-number'>106</span>
<span class='line-number'>107</span>
<span class='line-number'>108</span>
<span class='line-number'>109</span>
<span class='line-number'>110</span>
<span class='line-number'>111</span>
<span class='line-number'>112</span>
<span class='line-number'>113</span>
<span class='line-number'>114</span>
<span class='line-number'>115</span>
<span class='line-number'>116</span>
<span class='line-number'>117</span>
<span class='line-number'>118</span>
<span class='line-number'>119</span>
<span class='line-number'>120</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">n</span> <span class="o">=</span> <span class="mi">2</span><span class="p">,</span> <span class="c1">// number of layers</span>
</span><span class='line'>    <span class="nx">m</span> <span class="o">=</span> <span class="mi">60</span><span class="p">,</span> <span class="c1">// number of samples per layer</span>
</span><span class='line'>    <span class="nx">data</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">layout</span><span class="p">.</span><span class="nx">stack</span><span class="p">()(</span><span class="nx">stream_layers</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">m</span><span class="p">,</span> <span class="p">.</span><span class="mi">1</span><span class="p">)),</span>
</span><span class='line'>    <span class="nx">color</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">interpolateRgb</span><span class="p">(</span><span class="s2">&quot;#00bfff&quot;</span><span class="p">,</span> <span class="s2">&quot;#aaa&quot;</span><span class="p">);</span>
</span><span class='line'>  <span class="c1">//00bfff</span>
</span><span class='line'>  <span class="c1">//1e90ff</span>
</span><span class='line'><span class="kd">var</span> <span class="nx">margin</span> <span class="o">=</span> <span class="mi">20</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">width</span> <span class="o">=</span> <span class="mi">824</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">height</span> <span class="o">=</span> <span class="mi">300</span> <span class="o">-</span> <span class="p">.</span><span class="mi">5</span> <span class="o">-</span> <span class="nx">margin</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">mx</span> <span class="o">=</span> <span class="nx">m</span><span class="p">,</span>
</span><span class='line'>    <span class="nx">my</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y0</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}),</span>
</span><span class='line'>    <span class="nx">mz</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">data</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y</span><span class="p">;</span>
</span><span class='line'>      <span class="p">});</span>
</span><span class='line'>    <span class="p">}),</span>
</span><span class='line'>    <span class="nx">x</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">x</span> <span class="o">*</span> <span class="nx">width</span> <span class="o">/</span> <span class="nx">mx</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">y0</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">height</span> <span class="o">-</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y0</span> <span class="o">*</span> <span class="nx">height</span> <span class="o">/</span> <span class="nx">my</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">y1</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">height</span> <span class="o">-</span> <span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">y</span> <span class="o">+</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y0</span><span class="p">)</span> <span class="o">*</span> <span class="nx">height</span> <span class="o">/</span> <span class="nx">my</span><span class="p">;</span> <span class="p">},</span>
</span><span class='line'>    <span class="nx">y2</span> <span class="o">=</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">d</span><span class="p">.</span><span class="nx">y</span> <span class="o">*</span> <span class="nx">height</span> <span class="o">/</span> <span class="nx">mz</span><span class="p">;</span> <span class="p">};</span> <span class="c1">// or `my` to not rescale</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">vis</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#chart&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;svg&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">width</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="nx">height</span> <span class="o">+</span> <span class="nx">margin</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">layers</span> <span class="o">=</span> <span class="nx">vis</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.layer&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">data</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">enter</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">style</span><span class="p">(</span><span class="s2">&quot;fill&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">color</span><span class="p">(</span><span class="nx">i</span> <span class="o">/</span> <span class="p">(</span><span class="nx">n</span> <span class="o">-</span> <span class="mi">1</span><span class="p">));</span> <span class="p">})</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;layer&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">bars</span> <span class="o">=</span> <span class="nx">layers</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.bar&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">d</span><span class="p">;</span> <span class="p">})</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">enter</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;g&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;bar&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="s2">&quot;translate(&quot;</span> <span class="o">+</span> <span class="nx">x</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="o">+</span> <span class="s2">&quot;,0)&quot;</span><span class="p">;</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">bars</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;rect&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">9</span><span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span> <span class="nx">height</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">i</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span> <span class="p">})</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span> <span class="nx">y1</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">y0</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="o">-</span> <span class="nx">y1</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="kd">var</span> <span class="nx">labels</span> <span class="o">=</span> <span class="nx">vis</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;text.label&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">data</span><span class="p">(</span><span class="nx">data</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
</span><span class='line'>  <span class="p">.</span><span class="nx">enter</span><span class="p">().</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;text&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;label&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span> <span class="nx">height</span> <span class="o">+</span> <span class="mi">6</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;dx&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">45</span><span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;dy&quot;</span><span class="p">,</span> <span class="s2">&quot;.71em&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;text-anchor&quot;</span><span class="p">,</span> <span class="s2">&quot;middle&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">text</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">i</span><span class="p">;</span> <span class="p">});</span>
</span><span class='line'>
</span><span class='line'><span class="nx">vis</span><span class="p">.</span><span class="nx">append</span><span class="p">(</span><span class="s2">&quot;line&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x1&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x2&quot;</span><span class="p">,</span> <span class="nx">width</span> <span class="o">-</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">1</span><span class="p">}))</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y1&quot;</span><span class="p">,</span> <span class="nx">height</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y2&quot;</span><span class="p">,</span> <span class="nx">height</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">transitionGroup</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">group</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;#chart&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">group</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#group&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;first active&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">group</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#stack&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;last&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">group</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.layer rect&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="nx">i</span> <span class="o">%</span> <span class="nx">m</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span> <span class="p">})</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">9</span> <span class="o">*</span> <span class="o">~~</span><span class="p">(</span><span class="nx">i</span> <span class="o">/</span> <span class="nx">m</span><span class="p">)</span> <span class="o">/</span> <span class="nx">n</span><span class="p">});</span> <span class="p">})</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">9</span> <span class="o">/</span> <span class="nx">n</span><span class="p">}))</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">,</span> <span class="nx">transitionEnd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">transitionEnd</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">height</span> <span class="o">-</span> <span class="nx">y2</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span> <span class="p">})</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="nx">y2</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">transitionStack</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">stack</span> <span class="o">=</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#chart&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">stack</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#group&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;first&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">stack</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="s2">&quot;#stack&quot;</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;class&quot;</span><span class="p">,</span> <span class="s2">&quot;last active&quot;</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">stack</span><span class="p">.</span><span class="nx">selectAll</span><span class="p">(</span><span class="s2">&quot;g.layer rect&quot;</span><span class="p">)</span>
</span><span class='line'>    <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">delay</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="p">(</span><span class="nx">i</span> <span class="o">%</span> <span class="nx">m</span><span class="p">)</span> <span class="o">*</span> <span class="mi">10</span><span class="p">;</span> <span class="p">})</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;y&quot;</span><span class="p">,</span> <span class="nx">y1</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;height&quot;</span><span class="p">,</span> <span class="kd">function</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="p">{</span> <span class="k">return</span> <span class="nx">y0</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span> <span class="o">-</span> <span class="nx">y1</span><span class="p">(</span><span class="nx">d</span><span class="p">);</span> <span class="p">})</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">each</span><span class="p">(</span><span class="s2">&quot;end&quot;</span><span class="p">,</span> <span class="nx">transitionEnd</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">transitionEnd</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>    <span class="nx">d3</span><span class="p">.</span><span class="nx">select</span><span class="p">(</span><span class="k">this</span><span class="p">)</span>
</span><span class='line'>      <span class="p">.</span><span class="nx">transition</span><span class="p">()</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">duration</span><span class="p">(</span><span class="mi">500</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;x&quot;</span><span class="p">,</span> <span class="mi">0</span><span class="p">)</span>
</span><span class='line'>        <span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;width&quot;</span><span class="p">,</span> <span class="nx">x</span><span class="p">({</span><span class="nx">x</span><span class="o">:</span> <span class="p">.</span><span class="mi">9</span><span class="p">}));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I&#8217;ve just changed a bit, only 2 layers instead of 4 and the colors are more according to my theme on the front page. The random number generation is also done through javascript. Here&#8217;s the code:</p>

<figure class='code'><figcaption><span>random.js</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/* Inspired by Lee Byron&#39;s test data generator. */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">stream_layers</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">m</span><span class="p">,</span> <span class="nx">o</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="nx">arguments</span><span class="p">.</span><span class="nx">length</span> <span class="o">&lt;</span> <span class="mi">3</span><span class="p">)</span> <span class="nx">o</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">bump</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">1</span> <span class="o">/</span> <span class="p">(.</span><span class="mi">1</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()),</span>
</span><span class='line'>        <span class="nx">y</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">()</span> <span class="o">-</span> <span class="p">.</span><span class="mi">5</span><span class="p">,</span>
</span><span class='line'>        <span class="nx">z</span> <span class="o">=</span> <span class="mi">10</span> <span class="o">/</span> <span class="p">(.</span><span class="mi">1</span> <span class="o">+</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">());</span>
</span><span class='line'>    <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">m</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">w</span> <span class="o">=</span> <span class="p">(</span><span class="nx">i</span> <span class="o">/</span> <span class="nx">m</span> <span class="o">-</span> <span class="nx">y</span><span class="p">)</span> <span class="o">*</span> <span class="nx">z</span><span class="p">;</span>
</span><span class='line'>      <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">+=</span> <span class="nx">x</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">exp</span><span class="p">(</span><span class="o">-</span><span class="nx">w</span> <span class="o">*</span> <span class="nx">w</span><span class="p">);</span>
</span><span class='line'>    <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">a</span> <span class="o">=</span> <span class="p">[],</span> <span class="nx">i</span><span class="p">;</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">m</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">]</span> <span class="o">=</span> <span class="nx">o</span> <span class="o">+</span> <span class="nx">o</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">random</span><span class="p">();</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="mi">5</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="nx">bump</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">map</span><span class="p">(</span><span class="nx">stream_index</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="cm">/* Another layer generator using gamma distributions. */</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">stream_waves</span><span class="p">(</span><span class="nx">n</span><span class="p">,</span> <span class="nx">m</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="nx">n</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>    <span class="k">return</span> <span class="nx">d3</span><span class="p">.</span><span class="nx">range</span><span class="p">(</span><span class="nx">m</span><span class="p">).</span><span class="nx">map</span><span class="p">(</span><span class="kd">function</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>        <span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">20</span> <span class="o">*</span> <span class="nx">j</span> <span class="o">/</span> <span class="nx">m</span> <span class="o">-</span> <span class="nx">i</span> <span class="o">/</span> <span class="mi">3</span><span class="p">;</span>
</span><span class='line'>        <span class="k">return</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">x</span> <span class="o">*</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">exp</span><span class="p">(</span><span class="o">-</span><span class="p">.</span><span class="mi">5</span> <span class="o">*</span> <span class="nx">x</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}).</span><span class="nx">map</span><span class="p">(</span><span class="nx">stream_index</span><span class="p">);</span>
</span><span class='line'>    <span class="p">});</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'>
</span><span class='line'><span class="kd">function</span> <span class="nx">stream_index</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span> <span class="nx">i</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">return</span> <span class="p">{</span><span class="nx">x</span><span class="o">:</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">y</span><span class="o">:</span> <span class="nb">Math</span><span class="p">.</span><span class="nx">max</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nx">d</span><span class="p">)};</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>I asked a stupid question before, on the mailing list. Here&#8217;s <a href="http://groups.google.com/group/d3-js/browse_thread/thread/891cd4f571b0f6e4#">the link</a> to it. It&#8217;s good if you want to start with d3.js. All the best if you are.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Attempting integration with WTForms with MongoAlchemy]]></title>
    <link href="http://DarkSector.github.com/blog/attempting-integration-with-wtforms-with-mongoalchemy/"/>
    <updated>2012-04-18T10:56:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/attempting-integration-with-wtforms-with-mongoalchemy</id>
    <content type="html"><![CDATA[<p>So the forms.py looks something like this.</p>

<figure class='code'><figcaption><span>forms.py </span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="kn">from</span> <span class="nn">__future__</span> <span class="kn">import</span> <span class="n">with_statement</span>
</span><span class='line'>
</span><span class='line'><span class="kn">from</span> <span class="nn">flask</span> <span class="kn">import</span> <span class="n">Flask</span><span class="p">,</span> <span class="n">request</span><span class="p">,</span> <span class="n">session</span><span class="p">,</span> <span class="n">g</span><span class="p">,</span> <span class="n">redirect</span><span class="p">,</span> <span class="n">url_for</span><span class="p">,</span> <span class="n">abort</span><span class="p">,</span> \
</span><span class='line'>     <span class="n">render_template</span><span class="p">,</span> <span class="n">flash</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">flaskext.wtf</span> <span class="kn">import</span> <span class="n">Form</span><span class="p">,</span> <span class="n">TextField</span><span class="p">,</span> <span class="n">TextAreaField</span><span class="p">,</span> \
</span><span class='line'>   <span class="n">PasswordField</span><span class="p">,</span> <span class="n">SubmitField</span><span class="p">,</span> <span class="n">Required</span><span class="p">,</span> <span class="n">SelectField</span><span class="p">,</span> <span class="n">ValidationError</span><span class="p">,</span> \
</span><span class='line'>   <span class="n">RadioField</span>
</span><span class='line'>      
</span><span class='line'><span class="kn">from</span> <span class="nn">foo</span> <span class="kn">import</span> <span class="n">app</span>
</span><span class='line'><span class="kn">from</span> <span class="nn">foo</span> <span class="kn">import</span> <span class="n">db</span>
</span><span class='line'>
</span><span class='line'><span class="k">class</span> <span class="nc">BuilderForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>  <span class="sd">&quot;&quot;&quot;Function used to create custom fields&quot;&quot;&quot;</span>
</span><span class='line'>  <span class="n">field_name</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">()</span>
</span><span class='line'>  <span class="n">field_type</span> <span class="o">=</span> <span class="n">SelectField</span><span class="p">(</span><span class="s">u&#39;Type of Field&#39;</span><span class="p">,</span><span class="n">choices</span><span class="o">=</span><span class="p">[(</span><span class="s">&#39;&#39;</span><span class="p">,</span><span class="s">&#39;&#39;</span><span class="p">)])</span>
</span><span class='line'>  <span class="n">submit</span> <span class="o">=</span> <span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Submit Information&#39;</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'><span class="k">class</span> <span class="nc">Register</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>  <span class="sd">&quot;&quot;&quot;Form for registeration of professional, org or moderator&quot;&quot;&quot;</span>        
</span><span class='line'>  <span class="n">usertype</span> <span class="o">=</span> <span class="n">SelectField</span><span class="p">(</span><span class="s">u&#39;Type of user&#39;</span><span class="p">,</span> <span class="n">choices</span><span class="o">=</span><span class="p">[(</span><span class="s">&#39;org&#39;</span><span class="p">,</span><span class="s">&#39;Organization&#39;</span><span class="p">),(</span><span class="s">&#39;pro&#39;</span><span class="p">,</span><span class="s">&#39;Professional&#39;</span><span class="p">),(</span><span class="s">&#39;mod&#39;</span><span class="p">,</span><span class="s">&#39;Moderator&#39;</span><span class="p">)])</span>
</span><span class='line'>  <span class="n">name</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Organization/Professional Name&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">email</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Email addresss *&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">phone</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Phone Number *&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">register</span> <span class="o">=</span> <span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Submit user information&#39;</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'><span class="k">class</span> <span class="nc">LoginForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>  <span class="sd">&quot;&quot;&quot;Form for logging in for Professionals and Orgs&quot;&quot;&quot;</span>
</span><span class='line'>      
</span><span class='line'>  <span class="n">email</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&#39;Your email which you used to register&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">password</span> <span class="o">=</span> <span class="n">PasswordField</span><span class="p">(</span><span class="s">&#39;Your passsword&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">usertype</span> <span class="o">=</span> <span class="n">SelectField</span><span class="p">(</span><span class="s">u&#39;Log me in as&#39;</span><span class="p">,</span> <span class="n">choices</span><span class="o">=</span><span class="p">[(</span><span class="s">&#39;org&#39;</span><span class="p">,</span><span class="s">&#39;Organization&#39;</span><span class="p">),(</span><span class="s">&#39;pro&#39;</span><span class="p">,</span><span class="s">&#39;Professional&#39;</span><span class="p">),(</span><span class="s">&#39;mod&#39;</span><span class="p">,</span><span class="s">&#39;Moderator&#39;</span><span class="p">)])</span>
</span><span class='line'>  <span class="n">login</span> <span class="o">=</span> <span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Login&#39;</span><span class="p">)</span>
</span><span class='line'>  
</span><span class='line'><span class="k">class</span> <span class="nc">StarterForm</span><span class="p">(</span><span class="n">Form</span><span class="p">):</span>
</span><span class='line'>  <span class="sd">&quot;&quot;&quot;Form for starting off the profile display process&quot;&quot;&quot;</span>
</span><span class='line'>  <span class="n">region</span> <span class="o">=</span> <span class="n">SelectField</span><span class="p">(</span><span class="s">u&#39;Select you state&#39;</span><span class="p">,</span> <span class="n">choices</span><span class="o">=</span><span class="p">[])</span>
</span><span class='line'>  <span class="n">pincode</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&quot;Your pincode&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">specific</span> <span class="o">=</span> <span class="n">TextField</span><span class="p">(</span><span class="s">&quot;Town or Village&quot;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">submit</span> <span class="o">=</span> <span class="n">SubmitField</span><span class="p">(</span><span class="s">&#39;Submit&#39;</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Notice how the region field in StarterForm would require database driven choices? Yeah I need to figure out how to do that in my views function. It&#8217;s important to render the views otherwise it might break the whole thing by circular imports.</p>

<p>Also since Forms are classes it would be difficult to pass the arguments when calling the form in views. Okay let&#8217;s attempt that.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Prototyping web based data acquisition applications]]></title>
    <link href="http://DarkSector.github.com/blog/prototyping-web-based--data-acquisition-applications/"/>
    <updated>2012-04-17T03:15:00+05:30</updated>
    <id>http://DarkSector.github.com/blog/prototyping-web-based&#8211;data-acquisition-applications</id>
    <content type="html"><![CDATA[<p>In order to build an application that processes or even simply displays data being acquired by say the serial port, it is not important to actually have the device connected.</p>

<p>We can build virtual serial pairs and have our backend transmit and acquire dummy data and then test the processing logic. This is one of the reasons why I love Python. It just doesn&#8217;t get in your way and gets you all the stuff you need to get started ASAP.</p>

<p>So I&#8217;ve resorted to <a href="http://pyserial.sourceforge.net/">PySerial</a> and this application called <a href="http://code.google.com/p/macosxvirtualserialport/">Virtual Serial Port</a>. The latter creates a pair in the /dev and the former is used to put in the data from one end and retrieve it at the other. An important question one could ask, why not just generate dummy data than getting it passed through a virtual serial pipe? Answer is that it&#8217;s the closest way to the real thing, might as well get it done.</p>

<p>So, after having created serial ports, now to simply create two scripts that pour and retrieve data.</p>

<figure class='code'><figcaption><span>Dummy-feeder.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">serial</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">random</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">time</span>
</span><span class='line'>
</span><span class='line'><span class="n">_portname</span> <span class="o">=</span> <span class="s">&#39;/dev/master&#39;</span>
</span><span class='line'><span class="n">dumper</span> <span class="o">=</span> <span class="n">serial</span><span class="o">.</span><span class="n">Serial</span><span class="p">(</span><span class="n">_portname</span><span class="p">,</span><span class="mi">115200</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>  <span class="n">l</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">randint</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">1023</span><span class="p">)</span>
</span><span class='line'>  <span class="n">k</span> <span class="o">=</span> <span class="n">random</span><span class="o">.</span><span class="n">choice</span><span class="p">(</span><span class="s">&#39;abcdef&#39;</span><span class="p">)</span>
</span><span class='line'>  <span class="n">dumper</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="n">k</span><span class="p">)</span>
</span><span class='line'>  <span class="n">dumper</span><span class="o">.</span><span class="n">write</span><span class="p">(</span><span class="nb">str</span><span class="p">(</span><span class="n">l</span><span class="p">))</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;random sensor:&quot;</span><span class="p">,</span><span class="n">k</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;random print: &quot;</span><span class="p">,</span><span class="n">l</span>
</span><span class='line'>  <span class="n">time</span><span class="o">.</span><span class="n">sleep</span><span class="p">(</span><span class="mi">2</span><span class="p">)</span>
</span></code></pre></td></tr></table></div></figure>




<figure class='code'><figcaption><span>Receiver.py</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='python'><span class='line'><span class="c">#!/usr/bin/python</span>
</span><span class='line'>
</span><span class='line'><span class="kn">import</span> <span class="nn">serial</span>
</span><span class='line'><span class="kn">import</span> <span class="nn">json</span>
</span><span class='line'>
</span><span class='line'><span class="n">_recvport</span> <span class="o">=</span> <span class="s">&#39;/dev/slave&#39;</span>
</span><span class='line'><span class="n">recv</span> <span class="o">=</span> <span class="n">serial</span><span class="o">.</span><span class="n">Serial</span><span class="p">(</span><span class="n">_recvport</span><span class="p">,</span><span class="mi">115200</span><span class="p">,</span><span class="n">timeout</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</span><span class='line'><span class="k">while</span><span class="p">(</span><span class="mi">1</span><span class="p">):</span>
</span><span class='line'>  <span class="n">data</span> <span class="o">=</span> <span class="n">recv</span><span class="o">.</span><span class="n">readline</span><span class="p">()</span>
</span><span class='line'>  <span class="k">print</span> <span class="s">&quot;received:&quot;</span><span class="p">,</span> <span class="n">data</span>
</span></code></pre></td></tr></table></div></figure>


<p>Yeah, so as it&#8217;s pretty obvious, dummy feeds the data and receiver receives it and just dumps it out on STDOUT. Now, that I&#8217;ve got this data, I need to be able to manipulate it to be able to send it to my application server. I think I&#8217;ll need the involvement of JSON here. Must experiment.</p>
]]></content>
  </entry>
  
</feed>
