---
layout: post
title: "My experience with Pymongo till now"
date: 2012-05-21 23:34
comments: true
categories: ["MongoDB","PyMongo","Python","Flask"]
---


In one word, it's been pretty awesome. [PyMongo](http://api.mongodb.org/python/current/), the Non relational database is pretty good. Here's some code.

```python PyMongo insertion

from pymongo import Connection as c

c = c('localhost', 45000)
db = c['test_db']
users = db.test_db['userlist']
user = {'username':'pronoy', 'password':'foobar'}
users.insert(user)
```

Now to retrieve the info it's even simpler.

```python Retrieving data

from pymongo import Connection as c

c = c('localhost', 45000)
db = c['test_db']
users = db.test_db['userlist']
users.find({'username':'pronoy'})
```

The interesting this is, if the collection isn't available it'll create it and if the database doesn't exist, it'll create that too. I tried using mongodb deployed on our lab machine and the python application running on my machine. Worked like a charm.

Now we can also search according to the _id key generated by the BSON. 

```python

from pymongo import Connection as c
from bson.objectid import ObjectId, InvalidId

c = c('localhost', 45000)
db = c['test_db']
users = db.test_db['userlist']
try:
	users.find(ObjectId('728als450000000'))
except InvalidId:
	print "No such ID exists"
else:
	for i in users.find(ObjectId('728als450000000')):
		print i
```

Took me quite a while to figure out that ObjectId and InvalidId belong to BSON and not pymongo. Either way work is good and next post I'll share my experience with Flask-Sijax. It's a really cool way of implementing jQuery Ajax calls. 
